allow:
  # - write
  # - read
  - env
  - net

scripts:
  main:
    envFile:
      - .env
    desc: Runs main script
    cmd: main.ts

  server:
    desc: Starts local server
    cmd: deployctl run --libs="" --watch --env=.env server.ts

  health_check:
    desc: Runs health_check script
    cmd: health_check.ts

  deps:
    desc: Update dependencies with ensuring pass tests
    cmd: udd deps.ts --test="vr test"

  lint:
    desc: Runs lint
    cmd: deno lint --ignore=cov_profile,resources

  fmt:
    desc: Runs format
    cmd: deno fmt --ignore=cov_profile,resources

  pre-commit:
    cmd: |
      FILES=$(git diff --staged --name-only --diff-filter=ACMR "*.ts")
          [ -z "$FILES" ] && exit 0
          echo "$FILES" | xargs deno lint
          echo "$FILES" | xargs deno fmt
          # echo "$FILES" | xargs git add
    desc: Lints and formats staged files
    gitHook: pre-commit

  test:
    allow:
      - read
    desc: Runs the tests
    cmd: deno test --reload
    gitHook: pre-push

  cov:
    desc: Shows uncovered lists
    cmd:
      - vr test --coverage=cov_profile
      - deno coverage cov_profile

  ci:
    desc: Runs lint, check format and test
    cmd:
      - vr lint
      - vr fmt --check
      - vr test

  commitlint:
    # dependencies: commitlint and @commitlint/config-conventional
    # yarn global add commitlint @commitlint/config-conventional
    desc: Checks commit messages format with commitlint
    cmd: commitlint -x @commitlint/config-conventional -e ${GIT_ARGS[1]}
    gitHook: commit-msg
